{"ast":null,"code":"/*!\nFullCalendar v5.11.3\nDocs & License: https://fullcalendar.io/\n(c) 2022 Adam Shaw\n*/\nimport './main.css';\nimport { createRef, getStickyHeaderDates, createElement, ViewRoot, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, DateComponent, buildNavLinkAttrs, DayCellContent, Fragment, BaseComponent, createFormatter, StandardEvent, buildSegTimeText, EventRoot, getSegAnchorAttrs, memoize, MoreLinkRoot, getSegMeta, createAriaClickAttrs, getUniqueDomId, setRef, DayCellRoot, WeekNumberRoot, buildEntryKey, intersectSpans, SegHierarchy, intersectRanges, addDays, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, Slicer, DayHeader, DaySeriesModel, DayTableModel, addWeeks, diffWeeks, DateProfileGenerator, createPlugin } from '@fullcalendar/common';\nimport { __extends, __assign, __spreadArray } from 'tslib';\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nvar TableView =\n/** @class */\nfunction (_super) {\n  __extends(TableView, _super);\n\n  function TableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.headerElRef = createRef();\n    return _this;\n  }\n\n  TableView.prototype.renderSimpleLayout = function (headerRowContent, bodyContent) {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var sections = [];\n    var stickyHeaderDates = getStickyHeaderDates(context.options);\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: {\n        content: bodyContent\n      }\n    });\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-daygrid'].concat(classNames).join(' ')\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: []\n        /* TODO: make optional? */\n        ,\n        sections: sections\n      }));\n    });\n  };\n\n  TableView.prototype.renderHScrollLayout = function (headerRowContent, bodyContent, colCnt, dayMinWidth) {\n    var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation');\n    }\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n    var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n    var sections = [];\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent\n        }]\n      });\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent\n      }]\n    });\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim\n        }]\n      });\n    }\n\n    return createElement(ViewRoot, {\n      viewSpec: context.viewSpec\n    }, function (rootElRef, classNames) {\n      return createElement(\"div\", {\n        ref: rootElRef,\n        className: ['fc-daygrid'].concat(classNames).join(' ')\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        colGroups: [{\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    });\n  };\n\n  return TableView;\n}(DateComponent);\n\nfunction splitSegsByRow(segs, rowCnt) {\n  var byRow = [];\n\n  for (var i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    byRow[seg.row].push(seg);\n  }\n\n  return byRow;\n}\n\nfunction splitSegsByFirstCol(segs, colCnt) {\n  var byCol = [];\n\n  for (var i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n\n  for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n    var seg = segs_2[_i];\n    byCol[seg.firstCol].push(seg);\n  }\n\n  return byCol;\n}\n\nfunction splitInteractionByRow(ui, rowCnt) {\n  var byRow = [];\n\n  if (!ui) {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n\n    for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {\n      var seg = _a[_i];\n      byRow[seg.row].segs.push(seg);\n    }\n  }\n\n  return byRow;\n}\n\nvar TableCellTop =\n/** @class */\nfunction (_super) {\n  __extends(TableCellTop, _super);\n\n  function TableCellTop() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableCellTop.prototype.render = function () {\n    var props = this.props;\n    var navLinkAttrs = buildNavLinkAttrs(this.context, props.date);\n    return createElement(DayCellContent, {\n      date: props.date,\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraHookProps: props.extraHookProps,\n      defaultContent: renderTopInner\n    }, function (innerElRef, innerContent) {\n      return (innerContent || props.forceDayTop) && createElement(\"div\", {\n        className: \"fc-daygrid-day-top\",\n        ref: innerElRef\n      }, createElement(\"a\", __assign({\n        id: props.dayNumberId,\n        className: \"fc-daygrid-day-number\"\n      }, navLinkAttrs), innerContent || createElement(Fragment, null, \"\\u00A0\")));\n    });\n  };\n\n  return TableCellTop;\n}(BaseComponent);\n\nfunction renderTopInner(props) {\n  return props.dayNumberText;\n}\n\nvar DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\n\nfunction hasListItemDisplay(seg) {\n  var display = seg.eventRange.ui.display;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol && // can't be multi-day\n  seg.isStart && // \"\n  seg.isEnd // \"\n  ;\n}\n\nvar TableBlockEvent =\n/** @class */\nfunction (_super) {\n  __extends(TableBlockEvent, _super);\n\n  function TableBlockEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableBlockEvent.prototype.render = function () {\n    var props = this.props;\n    return createElement(StandardEvent, __assign({}, props, {\n      extraClassNames: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n      defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n      defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n      disableResizing: !props.seg.eventRange.def.allDay\n    }));\n  };\n\n  return TableBlockEvent;\n}(BaseComponent);\n\nvar TableListItemEvent =\n/** @class */\nfunction (_super) {\n  __extends(TableListItemEvent, _super);\n\n  function TableListItemEvent() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TableListItemEvent.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n    var timeText = buildSegTimeText(props.seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n    return createElement(EventRoot, {\n      seg: props.seg,\n      timeText: timeText,\n      defaultContent: renderInnerContent,\n      isDragging: props.isDragging,\n      isResizing: false,\n      isDateSelecting: false,\n      isSelected: props.isSelected,\n      isPast: props.isPast,\n      isFuture: props.isFuture,\n      isToday: props.isToday\n    }, function (rootElRef, classNames, innerElRef, innerContent) {\n      return (// we don't use styles!\n        createElement(\"a\", __assign({\n          className: ['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' '),\n          ref: rootElRef\n        }, getSegAnchorAttrs(props.seg, context)), innerContent)\n      );\n    });\n  };\n\n  return TableListItemEvent;\n}(BaseComponent);\n\nfunction renderInnerContent(innerProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: innerProps.borderColor || innerProps.backgroundColor\n    }\n  }), innerProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, innerProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, innerProps.event.title || createElement(Fragment, null, \"\\u00A0\")));\n}\n\nvar TableCellMoreLink =\n/** @class */\nfunction (_super) {\n  __extends(TableCellMoreLink, _super);\n\n  function TableCellMoreLink() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.compileSegs = memoize(compileSegs);\n    return _this;\n  }\n\n  TableCellMoreLink.prototype.render = function () {\n    var props = this.props;\n\n    var _a = this.compileSegs(props.singlePlacements),\n        allSegs = _a.allSegs,\n        invisibleSegs = _a.invisibleSegs;\n\n    return createElement(MoreLinkRoot, {\n      dateProfile: props.dateProfile,\n      todayRange: props.todayRange,\n      allDayDate: props.allDayDate,\n      moreCnt: props.moreCnt,\n      allSegs: allSegs,\n      hiddenSegs: invisibleSegs,\n      alignmentElRef: props.alignmentElRef,\n      alignGridTop: props.alignGridTop,\n      extraDateSpan: props.extraDateSpan,\n      popoverContent: function () {\n        var isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {};\n        return createElement(Fragment, null, allSegs.map(function (seg) {\n          var instanceId = seg.eventRange.instance.instanceId;\n          return createElement(\"div\", {\n            className: \"fc-daygrid-event-harness\",\n            key: instanceId,\n            style: {\n              visibility: isForcedInvisible[instanceId] ? 'hidden' : ''\n            }\n          }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, __assign({\n            seg: seg,\n            isDragging: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))) : createElement(TableBlockEvent, __assign({\n            seg: seg,\n            isDragging: false,\n            isResizing: false,\n            isDateSelecting: false,\n            isSelected: instanceId === props.eventSelection,\n            defaultDisplayEventEnd: false\n          }, getSegMeta(seg, props.todayRange))));\n        }));\n      }\n    }, function (rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) {\n      return createElement(\"a\", __assign({\n        ref: rootElRef,\n        className: ['fc-daygrid-more-link'].concat(classNames).join(' '),\n        title: title,\n        \"aria-expanded\": isExpanded,\n        \"aria-controls\": popoverId\n      }, createAriaClickAttrs(handleClick)), innerContent);\n    });\n  };\n\n  return TableCellMoreLink;\n}(BaseComponent);\n\nfunction compileSegs(singlePlacements) {\n  var allSegs = [];\n  var invisibleSegs = [];\n\n  for (var _i = 0, singlePlacements_1 = singlePlacements; _i < singlePlacements_1.length; _i++) {\n    var placement = singlePlacements_1[_i];\n    allSegs.push(placement.seg);\n\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg);\n    }\n  }\n\n  return {\n    allSegs: allSegs,\n    invisibleSegs: invisibleSegs\n  };\n}\n\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\n\nvar TableCell =\n/** @class */\nfunction (_super) {\n  __extends(TableCell, _super);\n\n  function TableCell() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.rootElRef = createRef();\n    _this.state = {\n      dayNumberId: getUniqueDomId()\n    };\n\n    _this.handleRootEl = function (el) {\n      setRef(_this.rootElRef, el);\n      setRef(_this.props.elRef, el);\n    };\n\n    return _this;\n  }\n\n  TableCell.prototype.render = function () {\n    var _a = this,\n        context = _a.context,\n        props = _a.props,\n        state = _a.state,\n        rootElRef = _a.rootElRef;\n\n    var date = props.date,\n        dateProfile = props.dateProfile;\n    var navLinkAttrs = buildNavLinkAttrs(context, date, 'week');\n    return createElement(DayCellRoot, {\n      date: date,\n      dateProfile: dateProfile,\n      todayRange: props.todayRange,\n      showDayNumber: props.showDayNumber,\n      extraHookProps: props.extraHookProps,\n      elRef: this.handleRootEl\n    }, function (dayElRef, dayClassNames, rootDataAttrs, isDisabled) {\n      return createElement(\"td\", __assign({\n        ref: dayElRef,\n        role: \"gridcell\",\n        className: ['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')\n      }, rootDataAttrs, props.extraDataAttrs, props.showDayNumber ? {\n        'aria-labelledby': state.dayNumberId\n      } : {}), createElement(\"div\", {\n        className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n        ref: props.innerElRef\n        /* different from hook system! RENAME */\n\n      }, props.showWeekNumber && createElement(WeekNumberRoot, {\n        date: date,\n        defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n      }, function (weekElRef, weekClassNames, innerElRef, innerContent) {\n        return createElement(\"a\", __assign({\n          ref: weekElRef,\n          className: ['fc-daygrid-week-number'].concat(weekClassNames).join(' ')\n        }, navLinkAttrs), innerContent);\n      }), !isDisabled && createElement(TableCellTop, {\n        date: date,\n        dateProfile: dateProfile,\n        showDayNumber: props.showDayNumber,\n        dayNumberId: state.dayNumberId,\n        forceDayTop: props.forceDayTop,\n        todayRange: props.todayRange,\n        extraHookProps: props.extraHookProps\n      }), createElement(\"div\", {\n        className: \"fc-daygrid-day-events\",\n        ref: props.fgContentElRef\n      }, props.fgContent, createElement(\"div\", {\n        className: \"fc-daygrid-day-bottom\",\n        style: {\n          marginTop: props.moreMarginTop\n        }\n      }, createElement(TableCellMoreLink, {\n        allDayDate: date,\n        singlePlacements: props.singlePlacements,\n        moreCnt: props.moreCnt,\n        alignmentElRef: rootElRef,\n        alignGridTop: !props.showDayNumber,\n        extraDateSpan: props.extraDateSpan,\n        dateProfile: props.dateProfile,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        todayRange: props.todayRange\n      }))), createElement(\"div\", {\n        className: \"fc-daygrid-day-bg\"\n      }, props.bgContent)));\n    });\n  };\n\n  return TableCell;\n}(DateComponent);\n\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, eventInstanceHeights, maxContentHeight, cells) {\n  var hierarchy = new DayGridSegHierarchy();\n  hierarchy.allowReslicing = true;\n  hierarchy.strictOrder = strictOrder;\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight;\n    hierarchy.hiddenConsumes = true;\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents;\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows;\n    hierarchy.hiddenConsumes = true;\n  } // create segInputs only for segs with known heights\n\n\n  var segInputs = [];\n  var unknownHeightSegs = [];\n\n  for (var i = 0; i < segs.length; i += 1) {\n    var seg = segs[i];\n    var instanceId = seg.eventRange.instance.instanceId;\n    var eventHeight = eventInstanceHeights[instanceId];\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        thickness: eventHeight,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1\n        }\n      });\n    } else {\n      unknownHeightSegs.push(seg);\n    }\n  }\n\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var segRects = hierarchy.toRects();\n\n  var _a = placeRects(segRects, segs, cells),\n      singleColPlacements = _a.singleColPlacements,\n      multiColPlacements = _a.multiColPlacements,\n      leftoverMargins = _a.leftoverMargins;\n\n  var moreCnts = [];\n  var moreMarginTops = []; // add segs with unknown heights\n\n  for (var _i = 0, unknownHeightSegs_1 = unknownHeightSegs; _i < unknownHeightSegs_1.length; _i++) {\n    var seg = unknownHeightSegs_1[_i];\n    multiColPlacements[seg.firstCol].push({\n      seg: seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // add the hidden entries\n\n\n  for (var col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0);\n  }\n\n  for (var _b = 0, hiddenEntries_1 = hiddenEntries; _b < hiddenEntries_1.length; _b++) {\n    var hiddenEntry = hiddenEntries_1[_b];\n    var seg = segs[hiddenEntry.index];\n    var hiddenSpan = hiddenEntry.span;\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n\n    for (var col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1;\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  } // deal with leftover margins\n\n\n  for (var col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col]);\n  }\n\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    moreCnts: moreCnts,\n    moreMarginTops: moreMarginTops\n  };\n} // rects ordered by top coord, then left\n\n\nfunction placeRects(allRects, segs, cells) {\n  var rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n  var singleColPlacements = [];\n  var multiColPlacements = [];\n  var leftoverMargins = [];\n\n  for (var col = 0; col < cells.length; col += 1) {\n    var rects = rectsByEachCol[col]; // compute all static segs in singlePlacements\n\n    var singlePlacements = [];\n    var currentHeight = 0;\n    var currentMarginTop = 0;\n\n    for (var _i = 0, rects_1 = rects; _i < rects_1.length; _i++) {\n      var rect = rects_1[_i];\n      var seg = segs[rect.index];\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight\n      });\n      currentHeight = rect.levelCoord + rect.thickness;\n    } // compute mixed static/absolute segs in multiPlacements\n\n\n    var multiPlacements = [];\n    currentHeight = 0;\n    currentMarginTop = 0;\n\n    for (var _a = 0, rects_2 = rects; _a < rects_2.length; _a++) {\n      var rect = rects_2[_a];\n      var seg = segs[rect.index];\n      var isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n\n      var isFirstCol = rect.span.start === col;\n      currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n\n      currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness;\n\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0\n          });\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop // claim the margin\n\n        });\n        currentMarginTop = 0;\n      }\n    }\n\n    singleColPlacements.push(singlePlacements);\n    multiColPlacements.push(multiPlacements);\n    leftoverMargins.push(currentMarginTop);\n  }\n\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    leftoverMargins: leftoverMargins\n  };\n}\n\nfunction groupRectsByEachCol(rects, colCnt) {\n  var rectsByEachCol = [];\n\n  for (var col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([]);\n  }\n\n  for (var _i = 0, rects_3 = rects; _i < rects_3.length; _i++) {\n    var rect = rects_3[_i];\n\n    for (var col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect);\n    }\n  }\n\n  return rectsByEachCol;\n}\n\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg;\n  }\n\n  var eventRange = seg.eventRange;\n  var origRange = eventRange.range;\n  var slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1)\n  });\n  return __assign(__assign({}, seg), {\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: __assign(__assign({}, eventRange.ui), {\n        durationEditable: false\n      }),\n      instance: eventRange.instance,\n      range: slicedRange\n    },\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n  });\n}\n\nvar DayGridSegHierarchy =\n/** @class */\nfunction (_super) {\n  __extends(DayGridSegHierarchy, _super);\n\n  function DayGridSegHierarchy() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // config\n\n\n    _this.hiddenConsumes = false; // allows us to keep hidden entries in the hierarchy so they take up space\n\n    _this.forceHidden = {};\n    return _this;\n  }\n\n  DayGridSegHierarchy.prototype.addSegs = function (segInputs) {\n    var _this = this;\n\n    var hiddenSegs = _super.prototype.addSegs.call(this, segInputs);\n\n    var entriesByLevel = this.entriesByLevel;\n\n    var excludeHidden = function (entry) {\n      return !_this.forceHidden[buildEntryKey(entry)];\n    }; // remove the forced-hidden segs\n\n\n    for (var level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n    }\n\n    return hiddenSegs;\n  };\n\n  DayGridSegHierarchy.prototype.handleInvalidInsertion = function (insertion, entry, hiddenEntries) {\n    var _a = this,\n        entriesByLevel = _a.entriesByLevel,\n        forceHidden = _a.forceHidden;\n\n    var touchingEntry = insertion.touchingEntry,\n        touchingLevel = insertion.touchingLevel,\n        touchingLateral = insertion.touchingLateral;\n\n    if (this.hiddenConsumes && touchingEntry) {\n      var touchingEntryId = buildEntryKey(touchingEntry); // if not already hidden\n\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          var placeholderEntry = __assign(__assign({}, touchingEntry), {\n            span: intersectSpans(touchingEntry.span, entry.span)\n          });\n\n          var placeholderEntryId = buildEntryKey(placeholderEntry);\n          forceHidden[placeholderEntryId] = true;\n          entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder\n\n          this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it\n        } else {\n          forceHidden[touchingEntryId] = true;\n          hiddenEntries.push(touchingEntry);\n        }\n      }\n    }\n\n    return _super.prototype.handleInvalidInsertion.call(this, insertion, entry, hiddenEntries);\n  };\n\n  return DayGridSegHierarchy;\n}(SegHierarchy);\n\nvar TableRow =\n/** @class */\nfunction (_super) {\n  __extends(TableRow, _super);\n\n  function TableRow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cellElRefs = new RefMap(); // the <td>\n\n    _this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n\n    _this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n\n    _this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n\n    _this.rootElRef = createRef();\n    _this.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      eventInstanceHeights: {}\n    };\n    return _this;\n  }\n\n  TableRow.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        state = _a.state,\n        context = _a.context;\n\n    var options = context.options;\n    var colCnt = props.cells.length;\n    var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n    var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n    var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n    var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n\n    var _b = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.eventInstanceHeights, state.maxContentHeight, props.cells),\n        singleColPlacements = _b.singleColPlacements,\n        multiColPlacements = _b.multiColPlacements,\n        moreCnts = _b.moreCnts,\n        moreMarginTops = _b.moreMarginTops;\n\n    var isForcedInvisible = // TODO: messy way to compute this\n    props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n    return createElement(\"tr\", {\n      ref: this.rootElRef,\n      role: \"row\"\n    }, props.renderIntro && props.renderIntro(), props.cells.map(function (cell, col) {\n      var normalFgNodes = _this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n\n      var mirrorFgNodes = _this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n\n      return createElement(TableCell, {\n        key: cell.key,\n        elRef: _this.cellElRefs.createRef(cell.key),\n        innerElRef: _this.frameElRefs.createRef(cell.key)\n        /* FF <td> problem, but okay to use for left/right. TODO: rename prop */\n        ,\n        dateProfile: props.dateProfile,\n        date: cell.date,\n        showDayNumber: props.showDayNumbers,\n        showWeekNumber: props.showWeekNumbers && col === 0,\n        forceDayTop: props.showWeekNumbers\n        /* even displaying weeknum for row, not necessarily day */\n        ,\n        todayRange: props.todayRange,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        extraHookProps: cell.extraHookProps,\n        extraDataAttrs: cell.extraDataAttrs,\n        extraClassNames: cell.extraClassNames,\n        extraDateSpan: cell.extraDateSpan,\n        moreCnt: moreCnts[col],\n        moreMarginTop: moreMarginTops[col],\n        singlePlacements: singleColPlacements[col],\n        fgContentElRef: _this.fgElRefs.createRef(cell.key),\n        fgContent: // Fragment scopes the keys\n        createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n        bgContent: // Fragment scopes the keys\n        createElement(Fragment, null, _this.renderFillSegs(highlightSegsByCol[col], 'highlight'), _this.renderFillSegs(businessHoursByCol[col], 'non-business'), _this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))\n      });\n    }));\n  };\n\n  TableRow.prototype.componentDidMount = function () {\n    this.updateSizing(true);\n  };\n\n  TableRow.prototype.componentDidUpdate = function (prevProps, prevState) {\n    var currentProps = this.props;\n    this.updateSizing(!isPropsEqual(prevProps, currentProps));\n  };\n\n  TableRow.prototype.getHighlightSegs = function () {\n    var props = this.props;\n\n    if (props.eventDrag && props.eventDrag.segs.length) {\n      // messy check\n      return props.eventDrag.segs;\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return props.dateSelectionSegs;\n  };\n\n  TableRow.prototype.getMirrorSegs = function () {\n    var props = this.props;\n\n    if (props.eventResize && props.eventResize.segs.length) {\n      // messy check\n      return props.eventResize.segs;\n    }\n\n    return [];\n  };\n\n  TableRow.prototype.renderFgSegs = function (col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n    var context = this.context;\n    var eventSelection = this.props.eventSelection;\n    var framePositions = this.state.framePositions;\n    var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n\n    var isMirror = isDragging || isResizing || isDateSelecting;\n    var nodes = [];\n\n    if (framePositions) {\n      for (var _i = 0, segPlacements_1 = segPlacements; _i < segPlacements_1.length; _i++) {\n        var placement = segPlacements_1[_i];\n        var seg = placement.seg;\n        var instanceId = seg.eventRange.instance.instanceId;\n        var key = instanceId + ':' + col;\n        var isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n        var isAbsolute = placement.isAbsolute;\n        var left = '';\n        var right = '';\n\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0;\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n          } else {\n            left = 0;\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n          }\n        }\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n\n\n        nodes.push(createElement(\"div\", {\n          className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n          key: key,\n          ref: isMirror ? null : this.segHarnessRefs.createRef(key),\n          style: {\n            visibility: isVisible ? '' : 'hidden',\n            marginTop: isAbsolute ? '' : placement.marginTop,\n            top: isAbsolute ? placement.absoluteTop : '',\n            left: left,\n            right: right\n          }\n        }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, __assign({\n          seg: seg,\n          isDragging: isDragging,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, __assign({\n          seg: seg,\n          isDragging: isDragging,\n          isResizing: isResizing,\n          isDateSelecting: isDateSelecting,\n          isSelected: instanceId === eventSelection,\n          defaultDisplayEventEnd: defaultDisplayEventEnd\n        }, getSegMeta(seg, todayRange)))));\n      }\n    }\n\n    return nodes;\n  };\n\n  TableRow.prototype.renderFillSegs = function (segs, fillType) {\n    var isRtl = this.context.isRtl;\n    var todayRange = this.props.todayRange;\n    var framePositions = this.state.framePositions;\n    var nodes = [];\n\n    if (framePositions) {\n      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        var leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n        };\n        nodes.push(createElement(\"div\", {\n          key: buildEventRangeKey(seg.eventRange),\n          className: \"fc-daygrid-bg-harness\",\n          style: leftRightCss\n        }, fillType === 'bg-event' ? createElement(BgEvent, __assign({\n          seg: seg\n        }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n      }\n    }\n\n    return createElement.apply(void 0, __spreadArray([Fragment, {}], nodes));\n  };\n\n  TableRow.prototype.updateSizing = function (isExternalSizingChange) {\n    var _a = this,\n        props = _a.props,\n        frameElRefs = _a.frameElRefs;\n\n    if (!props.forPrint && props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        var frameEls = props.cells.map(function (cell) {\n          return frameElRefs.currentMap[cell.key];\n        });\n\n        if (frameEls.length) {\n          var originEl = this.rootElRef.current;\n          this.setState({\n            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n            false)\n          });\n        }\n      }\n\n      var oldInstanceHeights = this.state.eventInstanceHeights;\n      var newInstanceHeights = this.queryEventInstanceHeights();\n      var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n      this.safeSetState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        eventInstanceHeights: __assign(__assign({}, oldInstanceHeights), newInstanceHeights),\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n      });\n    }\n  };\n\n  TableRow.prototype.queryEventInstanceHeights = function () {\n    var segElMap = this.segHarnessRefs.currentMap;\n    var eventInstanceHeights = {}; // get the max height amongst instance segs\n\n    for (var key in segElMap) {\n      var height = Math.round(segElMap[key].getBoundingClientRect().height);\n      var instanceId = key.split(':')[0]; // deconstruct how renderFgSegs makes the key\n\n      eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height);\n    }\n\n    return eventInstanceHeights;\n  };\n\n  TableRow.prototype.computeMaxContentHeight = function () {\n    var firstKey = this.props.cells[0].key;\n    var cellEl = this.cellElRefs.currentMap[firstKey];\n    var fcContainerEl = this.fgElRefs.currentMap[firstKey];\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n  };\n\n  TableRow.prototype.getCellEls = function () {\n    var elMap = this.cellElRefs.currentMap;\n    return this.props.cells.map(function (cell) {\n      return elMap[cell.key];\n    });\n  };\n\n  return TableRow;\n}(DateComponent);\n\nTableRow.addStateEquality({\n  eventInstanceHeights: isPropsEqual\n});\n\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n  if (!mirrorSegs.length) {\n    return [];\n  }\n\n  var topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n\n  return mirrorSegs.map(function (seg) {\n    return {\n      seg: seg,\n      isVisible: true,\n      isAbsolute: true,\n      absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n      marginTop: 0\n    };\n  });\n}\n\nfunction buildAbsoluteTopHash(colPlacements) {\n  var topsByInstanceId = {};\n\n  for (var _i = 0, colPlacements_1 = colPlacements; _i < colPlacements_1.length; _i++) {\n    var placements = colPlacements_1[_i];\n\n    for (var _a = 0, placements_1 = placements; _a < placements_1.length; _a++) {\n      var placement = placements_1[_a];\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n    }\n  }\n\n  return topsByInstanceId;\n}\n\nvar Table =\n/** @class */\nfunction (_super) {\n  __extends(Table, _super);\n\n  function Table() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.splitBusinessHourSegs = memoize(splitSegsByRow);\n    _this.splitBgEventSegs = memoize(splitSegsByRow);\n    _this.splitFgEventSegs = memoize(splitSegsByRow);\n    _this.splitDateSelectionSegs = memoize(splitSegsByRow);\n    _this.splitEventDrag = memoize(splitInteractionByRow);\n    _this.splitEventResize = memoize(splitInteractionByRow);\n    _this.rowRefs = new RefMap();\n\n    _this.handleRootEl = function (rootEl) {\n      _this.rootEl = rootEl;\n\n      if (rootEl) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: rootEl,\n          isHitComboAllowed: _this.props.isHitComboAllowed\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n\n    return _this;\n  }\n\n  Table.prototype.render = function () {\n    var _this = this;\n\n    var props = this.props;\n    var dateProfile = props.dateProfile,\n        dayMaxEventRows = props.dayMaxEventRows,\n        dayMaxEvents = props.dayMaxEvents,\n        expandRows = props.expandRows;\n    var rowCnt = props.cells.length;\n    var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n    var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n    var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n    var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n    var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n    var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n    var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true; // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false;\n      dayMaxEventRows = null;\n      dayMaxEvents = null;\n    }\n\n    var classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural' // will height of one row depend on the others?\n    ];\n    return createElement(\"div\", {\n      className: classNames.join(' '),\n      ref: this.handleRootEl,\n      style: {\n        // these props are important to give this wrapper correct dimensions for interactions\n        // TODO: if we set it here, can we avoid giving to inner tables?\n        width: props.clientWidth,\n        minWidth: props.tableMinWidth\n      }\n    }, createElement(NowTimer, {\n      unit: \"day\"\n    }, function (nowDate, todayRange) {\n      return createElement(Fragment, null, createElement(\"table\", {\n        role: \"presentation\",\n        className: \"fc-scrollgrid-sync-table\",\n        style: {\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n          height: expandRows ? props.clientHeight : ''\n        }\n      }, props.colGroupNode, createElement(\"tbody\", {\n        role: \"presentation\"\n      }, props.cells.map(function (cells, row) {\n        return createElement(TableRow, {\n          ref: _this.rowRefs.createRef(row),\n          key: cells.length ? cells[0].date.toISOString()\n          /* best? or put key on cell? or use diff formatter? */\n          : row // in case there are no cells (like when resource view is loading)\n          ,\n          showDayNumbers: rowCnt > 1,\n          showWeekNumbers: props.showWeekNumbers,\n          todayRange: todayRange,\n          dateProfile: dateProfile,\n          cells: cells,\n          renderIntro: props.renderRowIntro,\n          businessHourSegs: businessHourSegsByRow[row],\n          eventSelection: props.eventSelection,\n          bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay)\n          /* hack */\n          ,\n          fgEventSegs: fgEventSegsByRow[row],\n          dateSelectionSegs: dateSelectionSegsByRow[row],\n          eventDrag: eventDragByRow[row],\n          eventResize: eventResizeByRow[row],\n          dayMaxEvents: dayMaxEvents,\n          dayMaxEventRows: dayMaxEventRows,\n          clientWidth: props.clientWidth,\n          clientHeight: props.clientHeight,\n          forPrint: props.forPrint\n        });\n      }))));\n    }));\n  }; // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n\n  Table.prototype.prepareHits = function () {\n    this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) {\n      return rowObj.getCellEls()[0];\n    }), // first cell el in each row. TODO: not optimal\n    false, true);\n    this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n    true, // horizontal\n    false);\n  };\n\n  Table.prototype.queryHit = function (positionLeft, positionTop) {\n    var _a = this,\n        colPositions = _a.colPositions,\n        rowPositions = _a.rowPositions;\n\n    var col = colPositions.leftToIndex(positionLeft);\n    var row = rowPositions.topToIndex(positionTop);\n\n    if (row != null && col != null) {\n      var cell = this.props.cells[row][col];\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: __assign({\n          range: this.getCellRange(row, col),\n          allDay: true\n        }, cell.extraDateSpan),\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row]\n        },\n        layer: 0\n      };\n    }\n\n    return null;\n  };\n\n  Table.prototype.getCellEl = function (row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n  };\n\n  Table.prototype.getCellRange = function (row, col) {\n    var start = this.props.cells[row][col].date;\n    var end = addDays(start, 1);\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return Table;\n}(DateComponent);\n\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\n\nvar DayTableSlicer =\n/** @class */\nfunction (_super) {\n  __extends(DayTableSlicer, _super);\n\n  function DayTableSlicer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.forceDayIfListItem = true;\n    return _this;\n  }\n\n  DayTableSlicer.prototype.sliceRange = function (dateRange, dayTableModel) {\n    return dayTableModel.sliceRange(dateRange);\n  };\n\n  return DayTableSlicer;\n}(Slicer);\n\nvar DayTable =\n/** @class */\nfunction (_super) {\n  __extends(DayTable, _super);\n\n  function DayTable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.slicer = new DayTableSlicer();\n    _this.tableRef = createRef();\n    return _this;\n  }\n\n  DayTable.prototype.render = function () {\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    return createElement(Table, __assign({\n      ref: this.tableRef\n    }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n      dateProfile: props.dateProfile,\n      cells: props.dayTableModel.cells,\n      colGroupNode: props.colGroupNode,\n      tableMinWidth: props.tableMinWidth,\n      renderRowIntro: props.renderRowIntro,\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      showWeekNumbers: props.showWeekNumbers,\n      expandRows: props.expandRows,\n      headerAlignElRef: props.headerAlignElRef,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      forPrint: props.forPrint\n    }));\n  };\n\n  return DayTable;\n}(DateComponent);\n\nvar DayTableView =\n/** @class */\nfunction (_super) {\n  __extends(DayTableView, _super);\n\n  function DayTableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buildDayTableModel = memoize(buildDayTableModel);\n    _this.headerRef = createRef();\n    _this.tableRef = createRef();\n    return _this;\n  }\n\n  DayTableView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.context,\n        options = _a.options,\n        dateProfileGenerator = _a.dateProfileGenerator;\n    var props = this.props;\n    var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n    var headerContent = options.dayHeaders && createElement(DayHeader, {\n      ref: this.headerRef,\n      dateProfile: props.dateProfile,\n      dates: dayTableModel.headerDates,\n      datesRepDistinctDays: dayTableModel.rowCnt === 1\n    });\n\n    var bodyContent = function (contentArg) {\n      return createElement(DayTable, {\n        ref: _this.tableRef,\n        dateProfile: props.dateProfile,\n        dayTableModel: dayTableModel,\n        businessHours: props.businessHours,\n        dateSelection: props.dateSelection,\n        eventStore: props.eventStore,\n        eventUiBases: props.eventUiBases,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        nextDayThreshold: options.nextDayThreshold,\n        colGroupNode: contentArg.tableColGroupNode,\n        tableMinWidth: contentArg.tableMinWidth,\n        dayMaxEvents: options.dayMaxEvents,\n        dayMaxEventRows: options.dayMaxEventRows,\n        showWeekNumbers: options.weekNumbers,\n        expandRows: !props.isHeightAuto,\n        headerAlignElRef: _this.headerElRef,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        forPrint: props.forPrint\n      });\n    };\n\n    return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n  };\n\n  return DayTableView;\n}(TableView);\n\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nvar TableDateProfileGenerator =\n/** @class */\nfunction (_super) {\n  __extends(TableDateProfileGenerator, _super);\n\n  function TableDateProfileGenerator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // Computes the date range that will be rendered.\n\n\n  TableDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n    var dateEnv = this.props.dateEnv;\n\n    var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);\n\n    var start = renderRange.start;\n    var end = renderRange.end;\n    var endOfWeek; // year and month views should be aligned with weeks. this is already done for week\n\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start); // make end-of-week if not already\n\n      endOfWeek = dateEnv.startOfWeek(end);\n\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1);\n      }\n    } // ensure 6 weeks\n\n\n    if (this.props.monthMode && this.props.fixedWeekCount) {\n      var rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n      diffWeeks(start, end));\n      end = addWeeks(end, 6 - rowCnt);\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  return TableDateProfileGenerator;\n}(DateProfileGenerator);\n\nvar main = createPlugin({\n  initialView: 'dayGridMonth',\n  views: {\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator\n    },\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: {\n        days: 1\n      }\n    },\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: {\n        weeks: 1\n      }\n    },\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: {\n        months: 1\n      },\n      monthMode: true,\n      fixedWeekCount: true\n    }\n  }\n});\nexport default main;\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableView, buildDayTableModel };","map":{"version":3,"mappings":"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","names":["__extends","_this","createRef","TableView","headerRowContent","bodyContent","props","context","sections","stickyHeaderDates","getStickyHeaderDates","options","push","type","key","isSticky","chunk","elRef","headerElRef","tableClassName","rowContent","liquid","content","createElement","ViewRoot","viewSpec","rootElRef","classNames","ref","className","concat","join","SimpleScrollGrid","isHeightAuto","forPrint","collapsibleWidth","cols","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","getStickyFooterScrollbar","chunks","renderScrollShim","colGroups","span","minWidth","DateComponent","splitSegsByRow","segs","rowCnt","byRow","i","_i","seg","row","splitSegsByFirstCol","byCol","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","TableCellTop","navLinkAttrs","buildNavLinkAttrs","date","DayCellContent","dateProfile","todayRange","showDayNumber","extraHookProps","defaultContent","renderTopInner","innerElRef","innerContent","forceDayTop","id","dayNumberId","Fragment","BaseComponent","dayNumberText","DEFAULT_TABLE_EVENT_TIME_FORMAT","createFormatter","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","eventRange","display","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","StandardEvent","__assign","extraClassNames","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","timeFormat","eventTimeFormat","timeText","buildSegTimeText","EventRoot","renderInnerContent","isDragging","isResizing","isDateSelecting","isSelected","isPast","isFuture","isToday","getSegAnchorAttrs","innerProps","style","borderColor","backgroundColor","event","title","memoize","compileSegs","TableCellMoreLink","singlePlacements","allSegs","invisibleSegs","MoreLinkRoot","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","eventSelection","getSegMeta","handleClick","isExpanded","popoverId","createAriaClickAttrs","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","getUniqueDomId","el","setRef","TableCell","state","DayCellRoot","handleRootEl","dayElRef","dayClassNames","rootDataAttrs","isDisabled","role","extraDataAttrs","showWeekNumber","WeekNumberRoot","defaultFormat","weekElRef","weekClassNames","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","eventInstanceHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","index","thickness","start","end","hiddenEntries","addSegs","segRects","toRects","placeRects","singleColPlacements","multiColPlacements","leftoverMargins","moreCnts","moreMarginTops","isAbsolute","absoluteTop","col","resliceSeg","_b","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","rects","currentHeight","currentMarginTop","rect","levelCoord","multiPlacements","_a","isFirstCol","spanStart","spanEnd","origRange","range","slicedRange","intersectRanges","addDays","durationEditable","valueOf","_super","call","entriesByLevel","excludeHidden","entry","forceHidden","buildEntryKey","level","filter","insertion","touchingLevel","touchingLateral","touchingEntry","touchingEntryId","placeholderEntry","intersectSpans","placeholderEntryId","splitEntry","handleInvalidInsertion","SegHierarchy","RefMap","framePositions","TableRow","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","sortEventSegs","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","mirrorFgNodes","buildMirrorPlacements","Boolean","cellElRefs","frameElRefs","showDayNumbers","showWeekNumbers","fgElRefs","renderFillSegs","updateSizing","prevProps","prevState","currentProps","isPropsEqual","dateSelectionSegs","segPlacements","isMirror","nodes","left","right","isRtl","lefts","rights","segHarnessRefs","top","fillType","leftRightCss","buildEventRangeKey","BgEvent","renderFill","__spreadArray","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","setState","PositionCache","oldInstanceHeights","newInstanceHeights","queryEventInstanceHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","split","max","firstKey","cellEl","fcContainerEl","bottom","elMap","addStateEquality","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","placements","rootEl","registerInteractiveComponent","isHitComboAllowed","unregisterInteractiveComponent","Table","expandRows","businessHourSegsByRow","splitBusinessHourSegs","bgEventSegsByRow","splitBgEventSegs","fgEventSegsByRow","splitFgEventSegs","dateSelectionSegsByRow","splitDateSelectionSegs","eventDragByRow","splitEventDrag","eventResizeByRow","splitEventResize","limitViaBalanced","width","tableMinWidth","NowTimer","unit","nowDate","clientHeight","colGroupNode","rowRefs","toISOString","renderRowIntro","isSegAllDay","rowPositions","collect","rowObj","getCellEls","colPositions","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","DayTableSlicer","dateRange","dayTableModel","sliceRange","Slicer","DayTable","tableRef","slicer","sliceProps","nextDayThreshold","headerAlignElRef","buildDayTableModel","DayTableView","dateProfileGenerator","headerContent","dayHeaders","DayHeader","headerRef","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","renderHScrollLayout","renderSimpleLayout","daySeries","DaySeriesModel","renderRange","DayTableModel","test","currentRangeUnit","TableDateProfileGenerator","currentRange","isRangeAllDay","dateEnv","buildRenderRange","endOfWeek","startOfWeek","addWeeks","monthMode","fixedWeekCount","ceil","diffWeeks","DateProfileGenerator","createPlugin","initialView","views","dayGrid","component","dateProfileGeneratorClass","dayGridDay","duration","days","dayGridWeek","weeks","dayGridMonth","months"],"sources":["/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableView.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableSeg.ts","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableCellTop.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/event-rendering.ts","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableBlockEvent.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableListItemEvent.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableCellMoreLink.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableCell.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/event-placement.ts","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableRow.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/Table.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/DayTableSlicer.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/DayTable.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/DayTableView.tsx","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/TableDateProfileGenerator.ts","/Users/funayama/programming/gmo-bash-frontend-ts/node_modules/@fullcalendar/daygrid/src/main.ts"],"sourcesContent":["import {\n  VNode, createElement,\n  SimpleScrollGrid,\n  SimpleScrollGridSection,\n  ChunkContentCallbackArgs,\n  createRef,\n  ScrollGridSectionConfig,\n  ViewRoot,\n  DateComponent,\n  ViewProps,\n  RefObject,\n  renderScrollShim,\n  getStickyHeaderDates,\n  getStickyFooterScrollbar,\n  ChunkConfigRowContent,\n  Dictionary,\n} from '@fullcalendar/common'\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\n\nexport abstract class TableView<State=Dictionary> extends DateComponent<ViewProps, State> {\n  protected headerElRef: RefObject<HTMLTableCellElement> = createRef<HTMLTableCellElement>()\n\n  renderSimpleLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n  ) {\n    let { props, context } = this\n    let sections: SimpleScrollGridSection[] = []\n    let stickyHeaderDates = getStickyHeaderDates(context.options)\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunk: {\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        },\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunk: { content: bodyContent },\n    })\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <SimpleScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              cols={[] /* TODO: make optional? */}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n\n  renderHScrollLayout(\n    headerRowContent: ChunkConfigRowContent,\n    bodyContent: (contentArg: ChunkContentCallbackArgs) => VNode,\n    colCnt: number,\n    dayMinWidth: number,\n  ) {\n    let ScrollGrid = this.context.pluginHooks.scrollGridImpl\n\n    if (!ScrollGrid) {\n      throw new Error('No ScrollGrid implementation')\n    }\n\n    let { props, context } = this\n    let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options)\n    let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options)\n    let sections: ScrollGridSectionConfig[] = []\n\n    if (headerRowContent) {\n      sections.push({\n        type: 'header',\n        key: 'header',\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'main',\n          elRef: this.headerElRef,\n          tableClassName: 'fc-col-header',\n          rowContent: headerRowContent,\n        }],\n      })\n    }\n\n    sections.push({\n      type: 'body',\n      key: 'body',\n      liquid: true,\n      chunks: [{\n        key: 'main',\n        content: bodyContent,\n      }],\n    })\n\n    if (stickyFooterScrollbar) {\n      sections.push({\n        type: 'footer',\n        key: 'footer',\n        isSticky: true,\n        chunks: [{\n          key: 'main',\n          content: renderScrollShim,\n        }],\n      })\n    }\n\n    return (\n      <ViewRoot viewSpec={context.viewSpec}>\n        {(rootElRef, classNames) => (\n          <div ref={rootElRef} className={['fc-daygrid'].concat(classNames).join(' ')}>\n            <ScrollGrid\n              liquid={!props.isHeightAuto && !props.forPrint}\n              collapsibleWidth={props.forPrint}\n              colGroups={[{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }]}\n              sections={sections}\n            />\n          </div>\n        )}\n      </ViewRoot>\n    )\n  }\n}\n","import { EventSegUiInteractionState, Seg } from '@fullcalendar/common'\n\n// this is a DATA STRUCTURE, not a component\n\nexport interface TableSeg extends Seg {\n  row: number\n  firstCol: number\n  lastCol: number\n}\n\nexport function splitSegsByRow(segs: TableSeg[], rowCnt: number) {\n  let byRow: TableSeg[][] = []\n\n  for (let i = 0; i < rowCnt; i += 1) {\n    byRow[i] = []\n  }\n\n  for (let seg of segs) {\n    byRow[seg.row].push(seg)\n  }\n\n  return byRow\n}\n\nexport function splitSegsByFirstCol(segs: TableSeg[], colCnt: number) {\n  let byCol: TableSeg[][] = []\n\n  for (let i = 0; i < colCnt; i += 1) {\n    byCol[i] = []\n  }\n\n  for (let seg of segs) {\n    byCol[seg.firstCol].push(seg)\n  }\n\n  return byCol\n}\n\nexport function splitInteractionByRow(ui: EventSegUiInteractionState | null, rowCnt: number) {\n  let byRow: EventSegUiInteractionState[] = []\n\n  if (!ui) {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null\n    }\n  } else {\n    for (let i = 0; i < rowCnt; i += 1) {\n      byRow[i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: [],\n      }\n    }\n\n    for (let seg of ui.segs) {\n      byRow[seg.row].segs.push(seg)\n    }\n  }\n\n  return byRow\n}\n","import {\n  createElement,\n  DateMarker,\n  DateRange,\n  DayCellContentArg,\n  DayCellContent,\n  BaseComponent,\n  DateProfile,\n  Dictionary,\n  Fragment,\n  buildNavLinkAttrs,\n} from '@fullcalendar/common'\n\ninterface TableCellTopProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  showDayNumber: boolean\n  dayNumberId: string\n  forceDayTop: boolean // hack to force-create an element with height (created by a nbsp)\n  todayRange: DateRange\n  extraHookProps?: Dictionary\n}\n\nexport class TableCellTop extends BaseComponent<TableCellTopProps> {\n  render() {\n    let { props } = this\n    let navLinkAttrs = buildNavLinkAttrs(this.context, props.date)\n\n    return (\n      <DayCellContent\n        date={props.date}\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        defaultContent={renderTopInner}\n      >\n        {(innerElRef, innerContent) => (\n          (innerContent || props.forceDayTop) && (\n            <div className=\"fc-daygrid-day-top\" ref={innerElRef}>\n              <a\n                id={props.dayNumberId}\n                className=\"fc-daygrid-day-number\"\n                {...navLinkAttrs}\n              >\n                {innerContent || <Fragment>&nbsp;</Fragment>}\n              </a>\n            </div>\n          )\n        )}\n      </DayCellContent>\n    )\n  }\n}\n\nfunction renderTopInner(props: DayCellContentArg) {\n  return props.dayNumberText\n}\n","import { createFormatter } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport const DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow',\n})\n\nexport function hasListItemDisplay(seg: TableSeg) {\n  let { display } = seg.eventRange.ui\n\n  return display === 'list-item' || (\n    display === 'auto' &&\n    !seg.eventRange.def.allDay &&\n    seg.firstCol === seg.lastCol && // can't be multi-day\n    seg.isStart && // \"\n    seg.isEnd // \"\n  )\n}\n","import { createElement, StandardEvent, BaseComponent, MinimalEventProps } from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface TableBlockEventProps extends MinimalEventProps {\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableBlockEvent extends BaseComponent<TableBlockEventProps> {\n  render() {\n    let { props } = this\n\n    return (\n      <StandardEvent\n        {...props}\n        extraClassNames={['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event']}\n        defaultTimeFormat={DEFAULT_TABLE_EVENT_TIME_FORMAT}\n        defaultDisplayEventEnd={props.defaultDisplayEventEnd}\n        disableResizing={!props.seg.eventRange.def.allDay}\n      />\n    )\n  }\n}\n","import {\n  createElement,\n  BaseComponent,\n  Seg,\n  EventRoot,\n  buildSegTimeText,\n  EventContentArg,\n  Fragment,\n  getSegAnchorAttrs,\n} from '@fullcalendar/common'\nimport { DEFAULT_TABLE_EVENT_TIME_FORMAT } from './event-rendering'\n\nexport interface DotTableEventProps {\n  seg: Seg\n  isDragging: boolean\n  isSelected: boolean\n  isPast: boolean\n  isFuture: boolean\n  isToday: boolean\n  defaultDisplayEventEnd: boolean\n}\n\nexport class TableListItemEvent extends BaseComponent<DotTableEventProps> {\n  render() {\n    let { props, context } = this\n    let timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT\n    let timeText = buildSegTimeText(\n      props.seg,\n      timeFormat,\n      context,\n      true,\n      props.defaultDisplayEventEnd,\n    )\n\n    return (\n      <EventRoot\n        seg={props.seg}\n        timeText={timeText}\n        defaultContent={renderInnerContent}\n        isDragging={props.isDragging}\n        isResizing={false}\n        isDateSelecting={false}\n        isSelected={props.isSelected}\n        isPast={props.isPast}\n        isFuture={props.isFuture}\n        isToday={props.isToday}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent) => ( // we don't use styles!\n          <a\n            className={['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' ')}\n            ref={rootElRef}\n            {...getSegAnchorAttrs(props.seg, context)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </EventRoot>\n    )\n  }\n}\n\nfunction renderInnerContent(innerProps: EventContentArg) {\n  return (\n    <Fragment>\n      <div\n        className=\"fc-daygrid-event-dot\"\n        style={{ borderColor: innerProps.borderColor || innerProps.backgroundColor }}\n      />\n      {innerProps.timeText && (\n        <div className=\"fc-event-time\">{innerProps.timeText}</div>\n      )}\n      <div className=\"fc-event-title\">\n        {innerProps.event.title || <Fragment>&nbsp;</Fragment>}\n      </div>\n    </Fragment>\n  )\n}\n","import {\n  createElement,\n  MoreLinkRoot,\n  RefObject,\n  BaseComponent,\n  memoize,\n  DateMarker,\n  Dictionary,\n  DateProfile,\n  DateRange,\n  EventSegUiInteractionState,\n  getSegMeta,\n  Fragment,\n  createAriaClickAttrs,\n} from '@fullcalendar/common'\nimport { TableSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableSeg } from './TableSeg'\n\nexport interface TableCellMoreLinkProps {\n  allDayDate: DateMarker\n  singlePlacements: TableSegPlacement[]\n  moreCnt: number\n  alignmentElRef: RefObject<HTMLElement> // for popover\n  alignGridTop: boolean // for popover\n  extraDateSpan?: Dictionary\n  dateProfile: DateProfile\n  todayRange: DateRange\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n}\n\nexport class TableCellMoreLink extends BaseComponent<TableCellMoreLinkProps> {\n  compileSegs = memoize(compileSegs)\n\n  render() {\n    let { props } = this\n    let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements)\n\n    return (\n      <MoreLinkRoot\n        dateProfile={props.dateProfile}\n        todayRange={props.todayRange}\n        allDayDate={props.allDayDate}\n        moreCnt={props.moreCnt}\n        allSegs={allSegs}\n        hiddenSegs={invisibleSegs}\n        alignmentElRef={props.alignmentElRef}\n        alignGridTop={props.alignGridTop}\n        extraDateSpan={props.extraDateSpan}\n        popoverContent={() => {\n          let isForcedInvisible =\n            (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n            (props.eventResize ? props.eventResize.affectedInstances : null) ||\n            {}\n          return (\n            <Fragment>\n              {allSegs.map((seg) => {\n                let instanceId = seg.eventRange.instance.instanceId\n                return (\n                  <div\n                    className=\"fc-daygrid-event-harness\"\n                    key={instanceId}\n                    style={{\n                      visibility: isForcedInvisible[instanceId] ? 'hidden' : ('' as any),\n                    }}\n                  >\n                    {hasListItemDisplay(seg) ? (\n                      <TableListItemEvent\n                        seg={seg}\n                        isDragging={false}\n                        isSelected={instanceId === props.eventSelection}\n                        defaultDisplayEventEnd={false}\n                        {...getSegMeta(seg, props.todayRange)}\n                      />\n                    ) : (\n                      <TableBlockEvent\n                        seg={seg}\n                        isDragging={false}\n                        isResizing={false}\n                        isDateSelecting={false}\n                        isSelected={instanceId === props.eventSelection}\n                        defaultDisplayEventEnd={false}\n                        {...getSegMeta(seg, props.todayRange)}\n                      />\n                    )}\n                  </div>\n                )\n              })}\n            </Fragment>\n          )\n        }}\n      >\n        {(rootElRef, classNames, innerElRef, innerContent, handleClick, title, isExpanded, popoverId) => (\n          <a\n            ref={rootElRef}\n            className={['fc-daygrid-more-link'].concat(classNames).join(' ')}\n            title={title}\n            aria-expanded={isExpanded}\n            aria-controls={popoverId}\n            {...createAriaClickAttrs(handleClick)}\n          >\n            {innerContent}\n          </a>\n        )}\n      </MoreLinkRoot>\n    )\n  }\n}\n\nfunction compileSegs(singlePlacements: TableSegPlacement[]): {\n  allSegs: TableSeg[]\n  invisibleSegs: TableSeg[]\n} {\n  let allSegs: TableSeg[] = []\n  let invisibleSegs: TableSeg[] = []\n\n  for (let placement of singlePlacements) {\n    allSegs.push(placement.seg)\n\n    if (!placement.isVisible) {\n      invisibleSegs.push(placement.seg)\n    }\n  }\n\n  return { allSegs, invisibleSegs }\n}\n","import {\n  Ref,\n  ComponentChildren,\n  createElement,\n  DateMarker,\n  DateComponent,\n  DateRange,\n  buildNavLinkAttrs,\n  WeekNumberRoot,\n  DayCellRoot,\n  DateProfile,\n  setRef,\n  createFormatter,\n  Dictionary,\n  createRef,\n  EventSegUiInteractionState,\n  getUniqueDomId,\n} from '@fullcalendar/common'\nimport { TableCellTop } from './TableCellTop'\nimport { TableCellMoreLink } from './TableCellMoreLink'\nimport { TableSegPlacement } from './event-placement'\n\nexport interface TableCellProps {\n  date: DateMarker\n  dateProfile: DateProfile\n  extraHookProps?: Dictionary\n  extraDataAttrs?: Dictionary\n  extraClassNames?: string[]\n  extraDateSpan?: Dictionary\n  elRef?: Ref<HTMLTableCellElement>\n  innerElRef?: Ref<HTMLDivElement>\n  bgContent: ComponentChildren\n  fgContentElRef?: Ref<HTMLDivElement> // TODO: rename!!! classname confusion. is the \"event\" div\n  fgContent: ComponentChildren\n  moreCnt: number\n  moreMarginTop: number\n  showDayNumber: boolean\n  showWeekNumber: boolean\n  forceDayTop: boolean\n  todayRange: DateRange\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  singlePlacements: TableSegPlacement[]\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' })\n\nexport class TableCell extends DateComponent<TableCellProps> {\n  private rootElRef = createRef<HTMLElement>()\n  state = {\n    dayNumberId: getUniqueDomId(),\n  }\n\n  render() {\n    let { context, props, state, rootElRef } = this\n    let { date, dateProfile } = props\n    let navLinkAttrs = buildNavLinkAttrs(context, date, 'week')\n\n    return (\n      <DayCellRoot\n        date={date}\n        dateProfile={dateProfile}\n        todayRange={props.todayRange}\n        showDayNumber={props.showDayNumber}\n        extraHookProps={props.extraHookProps}\n        elRef={this.handleRootEl}\n      >\n        {(dayElRef, dayClassNames, rootDataAttrs, isDisabled) => (\n          <td\n            ref={dayElRef}\n            role=\"gridcell\"\n            className={['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ')}\n            {...rootDataAttrs}\n            {...props.extraDataAttrs}\n            {...(props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})}\n          >\n            <div className=\"fc-daygrid-day-frame fc-scrollgrid-sync-inner\" ref={props.innerElRef /* different from hook system! RENAME */}>\n              {props.showWeekNumber && (\n                <WeekNumberRoot date={date} defaultFormat={DEFAULT_WEEK_NUM_FORMAT}>\n                  {(weekElRef, weekClassNames, innerElRef, innerContent) => (\n                    <a\n                      ref={weekElRef}\n                      className={['fc-daygrid-week-number'].concat(weekClassNames).join(' ')}\n                      {...navLinkAttrs}\n                    >\n                      {innerContent}\n                    </a>\n                  )}\n                </WeekNumberRoot>\n              )}\n              {!isDisabled && (\n                <TableCellTop\n                  date={date}\n                  dateProfile={dateProfile}\n                  showDayNumber={props.showDayNumber}\n                  dayNumberId={state.dayNumberId}\n                  forceDayTop={props.forceDayTop}\n                  todayRange={props.todayRange}\n                  extraHookProps={props.extraHookProps}\n                />\n              )}\n              <div\n                className=\"fc-daygrid-day-events\"\n                ref={props.fgContentElRef}\n              >\n                {props.fgContent}\n                <div className=\"fc-daygrid-day-bottom\" style={{ marginTop: props.moreMarginTop }}>\n                  <TableCellMoreLink\n                    allDayDate={date}\n                    singlePlacements={props.singlePlacements}\n                    moreCnt={props.moreCnt}\n                    alignmentElRef={rootElRef}\n                    alignGridTop={!props.showDayNumber}\n                    extraDateSpan={props.extraDateSpan}\n                    dateProfile={props.dateProfile}\n                    eventSelection={props.eventSelection}\n                    eventDrag={props.eventDrag}\n                    eventResize={props.eventResize}\n                    todayRange={props.todayRange}\n                  />\n                </div>\n              </div>\n              <div className=\"fc-daygrid-day-bg\">\n                {props.bgContent}\n              </div>\n            </div>\n          </td>\n        )}\n      </DayCellRoot>\n    )\n  }\n\n  handleRootEl = (el: HTMLElement) => {\n    setRef(this.rootElRef, el)\n    setRef(this.props.elRef, el)\n  }\n}\n","import {\n  SegHierarchy,\n  SegRect,\n  SegEntry,\n  SegInsertion,\n  buildEntryKey,\n  EventRenderRange,\n  intersectRanges,\n  addDays,\n  DayTableCell,\n  intersectSpans,\n} from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport interface TableSegPlacement {\n  seg: TableSeg\n  isVisible: boolean\n  isAbsolute: boolean\n  absoluteTop: number // populated regardless of isAbsolute\n  marginTop: number\n}\n\nexport function computeFgSegPlacement(\n  segs: TableSeg[], // assumed already sorted\n  dayMaxEvents: boolean | number,\n  dayMaxEventRows: boolean | number,\n  strictOrder: boolean,\n  eventInstanceHeights: { [instanceId: string]: number },\n  maxContentHeight: number | null,\n  cells: DayTableCell[],\n) {\n  let hierarchy = new DayGridSegHierarchy()\n  hierarchy.allowReslicing = true\n  hierarchy.strictOrder = strictOrder\n\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight\n    hierarchy.hiddenConsumes = true\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows\n    hierarchy.hiddenConsumes = true\n  }\n\n  // create segInputs only for segs with known heights\n  let segInputs: SegEntry[] = []\n  let unknownHeightSegs: TableSeg[] = []\n  for (let i = 0; i < segs.length; i += 1) {\n    let seg = segs[i]\n    let { instanceId } = seg.eventRange.instance\n    let eventHeight = eventInstanceHeights[instanceId]\n\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        thickness: eventHeight,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1,\n        },\n      })\n    } else {\n      unknownHeightSegs.push(seg)\n    }\n  }\n\n  let hiddenEntries = hierarchy.addSegs(segInputs)\n  let segRects = hierarchy.toRects()\n  let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells)\n\n  let moreCnts: number[] = []\n  let moreMarginTops: number[] = []\n\n  // add segs with unknown heights\n  for (let seg of unknownHeightSegs) {\n    multiColPlacements[seg.firstCol].push({\n      seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0,\n    })\n\n    for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0,\n      })\n    }\n  }\n\n  // add the hidden entries\n  for (let col = 0; col < cells.length; col += 1) {\n    moreCnts.push(0)\n  }\n  for (let hiddenEntry of hiddenEntries) {\n    let seg = segs[hiddenEntry.index]\n    let hiddenSpan = hiddenEntry.span\n\n    multiColPlacements[hiddenSpan.start].push({\n      seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0,\n    })\n\n    for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n      moreCnts[col] += 1\n      singleColPlacements[col].push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0,\n      })\n    }\n  }\n\n  // deal with leftover margins\n  for (let col = 0; col < cells.length; col += 1) {\n    moreMarginTops.push(leftoverMargins[col])\n  }\n\n  return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops }\n}\n\n// rects ordered by top coord, then left\nfunction placeRects(allRects: SegRect[], segs: TableSeg[], cells: DayTableCell[]) {\n  let rectsByEachCol = groupRectsByEachCol(allRects, cells.length)\n  let singleColPlacements: TableSegPlacement[][] = []\n  let multiColPlacements: TableSegPlacement[][] = []\n  let leftoverMargins: number[] = []\n\n  for (let col = 0; col < cells.length; col += 1) {\n    let rects = rectsByEachCol[col]\n\n    // compute all static segs in singlePlacements\n    let singlePlacements: TableSegPlacement[] = []\n    let currentHeight = 0\n    let currentMarginTop = 0\n    for (let rect of rects) {\n      let seg = segs[rect.index]\n      singlePlacements.push({\n        seg: resliceSeg(seg, col, col + 1, cells),\n        isVisible: true,\n        isAbsolute: false,\n        absoluteTop: rect.levelCoord,\n        marginTop: rect.levelCoord - currentHeight,\n      })\n      currentHeight = rect.levelCoord + rect.thickness\n    }\n\n    // compute mixed static/absolute segs in multiPlacements\n    let multiPlacements: TableSegPlacement[] = []\n    currentHeight = 0\n    currentMarginTop = 0\n    for (let rect of rects) {\n      let seg = segs[rect.index]\n      let isAbsolute = rect.span.end - rect.span.start > 1 // multi-column?\n      let isFirstCol = rect.span.start === col\n\n      currentMarginTop += rect.levelCoord - currentHeight // amount of space since bottom of previous seg\n      currentHeight = rect.levelCoord + rect.thickness // height will now be bottom of current seg\n\n      if (isAbsolute) {\n        currentMarginTop += rect.thickness\n        if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: true,\n            absoluteTop: rect.levelCoord,\n            marginTop: 0,\n          })\n        }\n      } else if (isFirstCol) {\n        multiPlacements.push({\n          seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: currentMarginTop, // claim the margin\n        })\n        currentMarginTop = 0\n      }\n    }\n\n    singleColPlacements.push(singlePlacements)\n    multiColPlacements.push(multiPlacements)\n    leftoverMargins.push(currentMarginTop)\n  }\n\n  return { singleColPlacements, multiColPlacements, leftoverMargins }\n}\n\nfunction groupRectsByEachCol(rects: SegRect[], colCnt: number): SegRect[][] {\n  let rectsByEachCol: SegRect[][] = []\n\n  for (let col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([])\n  }\n\n  for (let rect of rects) {\n    for (let col = rect.span.start; col < rect.span.end; col += 1) {\n      rectsByEachCol[col].push(rect)\n    }\n  }\n\n  return rectsByEachCol\n}\n\nfunction resliceSeg(seg: TableSeg, spanStart: number, spanEnd: number, cells: DayTableCell[]): TableSeg {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg\n  }\n\n  let eventRange = seg.eventRange\n  let origRange = eventRange.range\n  let slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1),\n  })\n\n  return {\n    ...seg,\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: { ...eventRange.ui, durationEditable: false }, // hack to disable resizing\n      instance: eventRange.instance,\n      range: slicedRange,\n    } as EventRenderRange,\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf(),\n  }\n}\n\nclass DayGridSegHierarchy extends SegHierarchy {\n  // config\n  hiddenConsumes: boolean = false\n\n  // allows us to keep hidden entries in the hierarchy so they take up space\n  forceHidden: { [entryId: string]: true } = {}\n\n  addSegs(segInputs: SegEntry[]): SegEntry[] {\n    const hiddenSegs = super.addSegs(segInputs)\n    const { entriesByLevel } = this\n    const excludeHidden = (entry: SegEntry) => !this.forceHidden[buildEntryKey(entry)]\n\n    // remove the forced-hidden segs\n    for (let level = 0; level < entriesByLevel.length; level += 1) {\n      entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden)\n    }\n\n    return hiddenSegs\n  }\n\n  handleInvalidInsertion(insertion: SegInsertion, entry: SegEntry, hiddenEntries: SegEntry[]) {\n    const { entriesByLevel, forceHidden } = this\n    const { touchingEntry, touchingLevel, touchingLateral } = insertion\n\n    if (this.hiddenConsumes && touchingEntry) {\n      const touchingEntryId = buildEntryKey(touchingEntry)\n      // if not already hidden\n      if (!forceHidden[touchingEntryId]) {\n        if (this.allowReslicing) {\n          const placeholderEntry: SegEntry = { // placeholder of the \"more\" link\n            ...touchingEntry,\n            span: intersectSpans(touchingEntry.span, entry.span),\n          }\n          const placeholderEntryId = buildEntryKey(placeholderEntry)\n          forceHidden[placeholderEntryId] = true\n          entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry // replace touchingEntry with our placeholder\n          this.splitEntry(touchingEntry, entry, hiddenEntries) // split up the touchingEntry, reinsert it\n        } else {\n          forceHidden[touchingEntryId] = true\n          hiddenEntries.push(touchingEntry)\n        }\n      }\n    }\n\n    return super.handleInvalidInsertion(insertion, entry, hiddenEntries)\n  }\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  createElement,\n  PositionCache,\n  RefMap,\n  CssDimValue,\n  DateRange,\n  getSegMeta,\n  DateProfile,\n  Fragment,\n  BgEvent,\n  renderFill,\n  isPropsEqual,\n  createRef,\n  buildEventRangeKey,\n  sortEventSegs,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByFirstCol } from './TableSeg'\nimport { TableCell } from './TableCell'\nimport { TableListItemEvent } from './TableListItemEvent'\nimport { TableBlockEvent } from './TableBlockEvent'\nimport { computeFgSegPlacement, TableSegPlacement } from './event-placement'\nimport { hasListItemDisplay } from './event-rendering'\n\n// TODO: attach to window resize?\n\nexport interface TableRowProps {\n  cells: DayTableCell[]\n  renderIntro?: () => VNode\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  clientWidth: number | null\n  clientHeight: number | null // simply for causing an updateSize, for when liquid height\n  dateProfile: DateProfile\n  todayRange: DateRange\n  showDayNumbers: boolean\n  showWeekNumbers: boolean\n  forPrint: boolean\n}\n\ninterface TableRowState {\n  framePositions: PositionCache\n  maxContentHeight: number | null\n  eventInstanceHeights: { [instanceId: string]: number } // integers\n}\n\nexport class TableRow extends DateComponent<TableRowProps, TableRowState> {\n  private cellElRefs = new RefMap<HTMLTableCellElement>() // the <td>\n  private frameElRefs = new RefMap<HTMLElement>() // the fc-daygrid-day-frame\n  private fgElRefs = new RefMap<HTMLDivElement>() // the fc-daygrid-day-events\n  private segHarnessRefs = new RefMap<HTMLDivElement>() // indexed by \"instanceId:firstCol\"\n  private rootElRef = createRef<HTMLTableRowElement>()\n\n  state: TableRowState = {\n    framePositions: null,\n    maxContentHeight: null,\n    eventInstanceHeights: {},\n  }\n\n  render() {\n    let { props, state, context } = this\n    let { options } = context\n    let colCnt = props.cells.length\n\n    let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt)\n    let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt)\n    let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt)\n    let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt)\n\n    let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(\n      sortEventSegs(props.fgEventSegs, options.eventOrder) as TableSeg[],\n      props.dayMaxEvents,\n      props.dayMaxEventRows,\n      options.eventOrderStrict,\n      state.eventInstanceHeights,\n      state.maxContentHeight,\n      props.cells,\n    )\n\n    let isForcedInvisible = // TODO: messy way to compute this\n      (props.eventDrag && props.eventDrag.affectedInstances) ||\n      (props.eventResize && props.eventResize.affectedInstances) ||\n      {}\n\n    return (\n      <tr ref={this.rootElRef} role=\"row\">\n        {props.renderIntro && props.renderIntro()}\n        {props.cells.map((cell, col) => {\n          let normalFgNodes = this.renderFgSegs(\n            col,\n            props.forPrint ? singleColPlacements[col] : multiColPlacements[col],\n            props.todayRange,\n            isForcedInvisible,\n          )\n\n          let mirrorFgNodes = this.renderFgSegs(\n            col,\n            buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements),\n            props.todayRange,\n            {},\n            Boolean(props.eventDrag),\n            Boolean(props.eventResize),\n            false, // date-selecting (because mirror is never drawn for date selection)\n          )\n\n          return (\n            <TableCell\n              key={cell.key}\n              elRef={this.cellElRefs.createRef(cell.key)}\n              innerElRef={this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */}\n              dateProfile={props.dateProfile}\n              date={cell.date}\n              showDayNumber={props.showDayNumbers}\n              showWeekNumber={props.showWeekNumbers && col === 0}\n              forceDayTop={props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */}\n              todayRange={props.todayRange}\n              eventSelection={props.eventSelection}\n              eventDrag={props.eventDrag}\n              eventResize={props.eventResize}\n              extraHookProps={cell.extraHookProps}\n              extraDataAttrs={cell.extraDataAttrs}\n              extraClassNames={cell.extraClassNames}\n              extraDateSpan={cell.extraDateSpan}\n              moreCnt={moreCnts[col]}\n              moreMarginTop={moreMarginTops[col]}\n              singlePlacements={singleColPlacements[col]}\n              fgContentElRef={this.fgElRefs.createRef(cell.key)}\n              fgContent={( // Fragment scopes the keys\n                <Fragment>\n                  <Fragment>{normalFgNodes}</Fragment>\n                  <Fragment>{mirrorFgNodes}</Fragment>\n                </Fragment>\n              )}\n              bgContent={( // Fragment scopes the keys\n                <Fragment>\n                  {this.renderFillSegs(highlightSegsByCol[col], 'highlight')}\n                  {this.renderFillSegs(businessHoursByCol[col], 'non-business')}\n                  {this.renderFillSegs(bgEventSegsByCol[col], 'bg-event')}\n                </Fragment>\n              )}\n            />\n          )\n        })}\n      </tr>\n    )\n  }\n\n  componentDidMount() {\n    this.updateSizing(true)\n  }\n\n  componentDidUpdate(prevProps: TableRowProps, prevState: TableRowState) {\n    let currentProps = this.props\n\n    this.updateSizing(\n      !isPropsEqual(prevProps, currentProps),\n    )\n  }\n\n  getHighlightSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n      return props.eventDrag.segs as TableSeg[]\n    }\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return props.dateSelectionSegs\n  }\n\n  getMirrorSegs(): TableSeg[] {\n    let { props } = this\n\n    if (props.eventResize && props.eventResize.segs.length) { // messy check\n      return props.eventResize.segs as TableSeg[]\n    }\n\n    return []\n  }\n\n  renderFgSegs(\n    col: number,\n    segPlacements: TableSegPlacement[],\n    todayRange: DateRange,\n    isForcedInvisible: { [instanceId: string]: any },\n    isDragging?: boolean,\n    isResizing?: boolean,\n    isDateSelecting?: boolean,\n  ): VNode[] {\n    let { context } = this\n    let { eventSelection } = this.props\n    let { framePositions } = this.state\n    let defaultDisplayEventEnd = this.props.cells.length === 1 // colCnt === 1\n    let isMirror = isDragging || isResizing || isDateSelecting\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let placement of segPlacements) {\n        let { seg } = placement\n        let { instanceId } = seg.eventRange.instance\n        let key = instanceId + ':' + col\n        let isVisible = placement.isVisible && !isForcedInvisible[instanceId]\n        let isAbsolute = placement.isAbsolute\n        let left: CssDimValue = ''\n        let right: CssDimValue = ''\n\n        if (isAbsolute) {\n          if (context.isRtl) {\n            right = 0\n            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n          } else {\n            left = 0\n            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n          }\n        }\n\n        /*\n        known bug: events that are force to be list-item but span multiple days still take up space in later columns\n        todo: in print view, for multi-day events, don't display title within non-start/end segs\n        */\n        nodes.push(\n          <div\n            className={'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : '')}\n            key={key}\n            ref={isMirror ? null : this.segHarnessRefs.createRef(key)}\n            style={{\n              visibility: isVisible ? ('' as any) : 'hidden',\n              marginTop: isAbsolute ? '' : placement.marginTop,\n              top: isAbsolute ? placement.absoluteTop : '',\n              left,\n              right,\n            }}\n          >\n            {hasListItemDisplay(seg) ? (\n              <TableListItemEvent\n                seg={seg}\n                isDragging={isDragging}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            ) : (\n              <TableBlockEvent\n                seg={seg}\n                isDragging={isDragging}\n                isResizing={isResizing}\n                isDateSelecting={isDateSelecting}\n                isSelected={instanceId === eventSelection}\n                defaultDisplayEventEnd={defaultDisplayEventEnd}\n                {...getSegMeta(seg, todayRange)}\n              />\n            )}\n          </div>,\n        )\n      }\n    }\n\n    return nodes\n  }\n\n  renderFillSegs(segs: TableSeg[], fillType: string): VNode {\n    let { isRtl } = this.context\n    let { todayRange } = this.props\n    let { framePositions } = this.state\n    let nodes: VNode[] = []\n\n    if (framePositions) {\n      for (let seg of segs) {\n        let leftRightCss = isRtl ? {\n          right: 0,\n          left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n        } : {\n          left: 0,\n          right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n        }\n\n        nodes.push(\n          <div\n            key={buildEventRangeKey(seg.eventRange)}\n            className=\"fc-daygrid-bg-harness\"\n            style={leftRightCss}\n          >\n            {fillType === 'bg-event' ?\n              <BgEvent seg={seg} {...getSegMeta(seg, todayRange)} /> :\n              renderFill(fillType)}\n          </div>,\n        )\n      }\n    }\n\n    return createElement(Fragment, {}, ...nodes)\n  }\n\n  updateSizing(isExternalSizingChange) {\n    let { props, frameElRefs } = this\n\n    if (\n      !props.forPrint &&\n      props.clientWidth !== null // positioning ready?\n    ) {\n      if (isExternalSizingChange) {\n        let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key])\n\n        if (frameEls.length) {\n          let originEl = this.rootElRef.current\n\n          this.setState({ // will trigger isCellPositionsChanged...\n            framePositions: new PositionCache(\n              originEl,\n              frameEls,\n              true, // isHorizontal\n              false,\n            ),\n          })\n        }\n      }\n\n      const oldInstanceHeights = this.state.eventInstanceHeights\n      const newInstanceHeights = this.queryEventInstanceHeights()\n      const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true\n\n      this.safeSetState({\n        // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n        // Essentially, once you compute an element's height, never null-out.\n        // TODO: always display all events, as visibility:hidden?\n        eventInstanceHeights: { ...oldInstanceHeights, ...newInstanceHeights },\n\n        maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n      })\n    }\n  }\n\n  queryEventInstanceHeights() {\n    let segElMap = this.segHarnessRefs.currentMap\n    let eventInstanceHeights: { [key: string]: number } = {}\n\n    // get the max height amongst instance segs\n    for (let key in segElMap) {\n      let height = Math.round(segElMap[key].getBoundingClientRect().height)\n      let instanceId = key.split(':')[0] // deconstruct how renderFgSegs makes the key\n      eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height)\n    }\n\n    return eventInstanceHeights\n  }\n\n  computeMaxContentHeight() {\n    let firstKey = this.props.cells[0].key\n    let cellEl = this.cellElRefs.currentMap[firstKey]\n    let fcContainerEl = this.fgElRefs.currentMap[firstKey]\n\n    return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top\n  }\n\n  public getCellEls() {\n    let elMap = this.cellElRefs.currentMap\n\n    return this.props.cells.map((cell) => elMap[cell.key])\n  }\n}\n\nTableRow.addStateEquality({\n  eventInstanceHeights: isPropsEqual,\n})\n\nfunction buildMirrorPlacements(mirrorSegs: TableSeg[], colPlacements: TableSegPlacement[][]): TableSegPlacement[] {\n  if (!mirrorSegs.length) {\n    return []\n  }\n  let topsByInstanceId = buildAbsoluteTopHash(colPlacements) // TODO: cache this at first render?\n  return mirrorSegs.map((seg: TableSeg) => ({\n    seg,\n    isVisible: true,\n    isAbsolute: true,\n    absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n    marginTop: 0,\n  }))\n}\n\nfunction buildAbsoluteTopHash(colPlacements: TableSegPlacement[][]): { [instanceId: string]: number } {\n  let topsByInstanceId: { [instanceId: string]: number } = {}\n\n  for (let placements of colPlacements) {\n    for (let placement of placements) {\n      topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop\n    }\n  }\n\n  return topsByInstanceId\n}\n","import {\n  EventSegUiInteractionState,\n  VNode,\n  DateComponent,\n  RefObject,\n  CssDimValue,\n  createElement,\n  PositionCache,\n  memoize,\n  addDays,\n  RefMap,\n  DateRange,\n  NowTimer,\n  DateMarker,\n  DateProfile,\n  Fragment,\n  Hit,\n  DayTableCell,\n} from '@fullcalendar/common'\nimport { TableSeg, splitSegsByRow, splitInteractionByRow } from './TableSeg'\nimport { TableRow } from './TableRow'\n\nexport interface TableProps {\n  dateProfile: DateProfile\n  cells: DayTableCell[][] // cells-BY-ROW\n  renderRowIntro?: () => VNode\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  expandRows: boolean\n  showWeekNumbers: boolean\n  clientWidth: number | null\n  clientHeight: number | null\n  businessHourSegs: TableSeg[]\n  bgEventSegs: TableSeg[]\n  fgEventSegs: TableSeg[]\n  dateSelectionSegs: TableSeg[]\n  eventSelection: string\n  eventDrag: EventSegUiInteractionState | null\n  eventResize: EventSegUiInteractionState | null\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  headerAlignElRef?: RefObject<HTMLElement>\n  forPrint: boolean\n  isHitComboAllowed?: (hit0: Hit, hit1: Hit) => boolean\n}\n\nexport class Table extends DateComponent<TableProps> {\n  private splitBusinessHourSegs = memoize(splitSegsByRow)\n  private splitBgEventSegs = memoize(splitSegsByRow)\n  private splitFgEventSegs = memoize(splitSegsByRow)\n  private splitDateSelectionSegs = memoize(splitSegsByRow)\n  private splitEventDrag = memoize(splitInteractionByRow)\n  private splitEventResize = memoize(splitInteractionByRow)\n  private rootEl: HTMLElement\n  private rowRefs = new RefMap<TableRow>()\n  private rowPositions: PositionCache\n  private colPositions: PositionCache\n\n  render() {\n    let { props } = this\n    let { dateProfile, dayMaxEventRows, dayMaxEvents, expandRows } = props\n    let rowCnt = props.cells.length\n\n    let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt)\n    let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt)\n    let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt)\n    let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt)\n    let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt)\n    let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt)\n\n    let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true\n\n    // if rows can't expand to fill fixed height, can't do balanced-height event limit\n    // TODO: best place to normalize these options?\n    if (limitViaBalanced && !expandRows) {\n      limitViaBalanced = false\n      dayMaxEventRows = null\n      dayMaxEvents = null\n    }\n\n    let classNames = [\n      'fc-daygrid-body',\n      limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', // will all row heights be equal?\n      expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n    ]\n\n    return (\n      <div\n        className={classNames.join(' ')}\n        ref={this.handleRootEl}\n        style={{\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n        }}\n      >\n        <NowTimer unit=\"day\">\n          {(nowDate: DateMarker, todayRange: DateRange) => (\n            <Fragment>\n              <table\n                role=\"presentation\"\n                className=\"fc-scrollgrid-sync-table\"\n                style={{\n                  width: props.clientWidth,\n                  minWidth: props.tableMinWidth,\n                  height: expandRows ? props.clientHeight : '',\n                }}\n              >\n                {props.colGroupNode}\n                <tbody role=\"presentation\">\n                  {props.cells.map((cells, row) => (\n                    <TableRow\n                      ref={this.rowRefs.createRef(row)}\n                      key={\n                        cells.length\n                          ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                          : row // in case there are no cells (like when resource view is loading)\n                      }\n                      showDayNumbers={rowCnt > 1}\n                      showWeekNumbers={props.showWeekNumbers}\n                      todayRange={todayRange}\n                      dateProfile={dateProfile}\n                      cells={cells}\n                      renderIntro={props.renderRowIntro}\n                      businessHourSegs={businessHourSegsByRow[row]}\n                      eventSelection={props.eventSelection}\n                      bgEventSegs={bgEventSegsByRow[row].filter(isSegAllDay) /* hack */}\n                      fgEventSegs={fgEventSegsByRow[row]}\n                      dateSelectionSegs={dateSelectionSegsByRow[row]}\n                      eventDrag={eventDragByRow[row]}\n                      eventResize={eventResizeByRow[row]}\n                      dayMaxEvents={dayMaxEvents}\n                      dayMaxEventRows={dayMaxEventRows}\n                      clientWidth={props.clientWidth}\n                      clientHeight={props.clientHeight}\n                      forPrint={props.forPrint}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </Fragment>\n          )}\n        </NowTimer>\n      </div>\n    )\n  }\n\n  handleRootEl = (rootEl: HTMLElement | null) => {\n    this.rootEl = rootEl\n\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, {\n        el: rootEl,\n        isHitComboAllowed: this.props.isHitComboAllowed,\n      })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n  // Hit System\n  // ----------------------------------------------------------------------------------------------------\n\n  prepareHits() {\n    this.rowPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n      false,\n      true, // vertical\n    )\n\n    this.colPositions = new PositionCache(\n      this.rootEl,\n      this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n      true, // horizontal\n      false,\n    )\n  }\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let { colPositions, rowPositions } = this\n    let col = colPositions.leftToIndex(positionLeft)\n    let row = rowPositions.topToIndex(positionTop)\n\n    if (row != null && col != null) {\n      let cell = this.props.cells[row][col]\n\n      return {\n        dateProfile: this.props.dateProfile,\n        dateSpan: {\n          range: this.getCellRange(row, col),\n          allDay: true,\n          ...cell.extraDateSpan,\n        },\n        dayEl: this.getCellEl(row, col),\n        rect: {\n          left: colPositions.lefts[col],\n          right: colPositions.rights[col],\n          top: rowPositions.tops[row],\n          bottom: rowPositions.bottoms[row],\n        },\n        layer: 0,\n      }\n    }\n\n    return null\n  }\n\n  private getCellEl(row, col) {\n    return this.rowRefs.currentMap[row].getCellEls()[col] // TODO: not optimal\n  }\n\n  private getCellRange(row, col) {\n    let start = this.props.cells[row][col].date\n    let end = addDays(start, 1)\n    return { start, end }\n  }\n}\n\nfunction isSegAllDay(seg: TableSeg) {\n  return seg.eventRange.def.allDay\n}\n","import { DayTableModel, DateRange, Slicer } from '@fullcalendar/common'\nimport { TableSeg } from './TableSeg'\n\nexport class DayTableSlicer extends Slicer<TableSeg, [DayTableModel]> {\n  forceDayIfListItem = true\n\n  sliceRange(dateRange: DateRange, dayTableModel: DayTableModel): TableSeg[] {\n    return dayTableModel.sliceRange(dateRange)\n  }\n}\n","import {\n  createElement, createRef, VNode,\n  EventStore,\n  EventUiHash,\n  DateSpan,\n  EventInteractionState,\n  DayTableModel,\n  Duration,\n  DateComponent,\n  ViewContext,\n  RefObject,\n  CssDimValue,\n  DateProfile,\n} from '@fullcalendar/common'\nimport { Table } from './Table'\nimport { DayTableSlicer } from './DayTableSlicer'\n\nexport interface DayTableProps {\n  dateProfile: DateProfile,\n  dayTableModel: DayTableModel\n  nextDayThreshold: Duration\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  colGroupNode: VNode\n  tableMinWidth: CssDimValue\n  renderRowIntro?: () => VNode\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  expandRows: boolean\n  showWeekNumbers: boolean\n  headerAlignElRef?: RefObject<HTMLElement> // for more popover alignment\n  clientWidth: number | null\n  clientHeight: number | null\n  forPrint: boolean\n}\n\nexport class DayTable extends DateComponent<DayTableProps, ViewContext> {\n  private slicer = new DayTableSlicer()\n  private tableRef = createRef<Table>()\n\n  render() {\n    let { props, context } = this\n\n    return (\n      <Table\n        ref={this.tableRef}\n        {...this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel)}\n        dateProfile={props.dateProfile}\n        cells={props.dayTableModel.cells}\n        colGroupNode={props.colGroupNode}\n        tableMinWidth={props.tableMinWidth}\n        renderRowIntro={props.renderRowIntro}\n        dayMaxEvents={props.dayMaxEvents}\n        dayMaxEventRows={props.dayMaxEventRows}\n        showWeekNumbers={props.showWeekNumbers}\n        expandRows={props.expandRows}\n        headerAlignElRef={props.headerAlignElRef}\n        clientWidth={props.clientWidth}\n        clientHeight={props.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n  }\n}\n","import {\n  createElement, createRef,\n  DayHeader,\n  DateProfileGenerator,\n  DateProfile,\n  memoize,\n  DaySeriesModel,\n  DayTableModel,\n  ChunkContentCallbackArgs,\n} from '@fullcalendar/common'\nimport { TableView } from './TableView'\nimport { DayTable } from './DayTable'\n\nexport class DayTableView extends TableView {\n  private buildDayTableModel = memoize(buildDayTableModel)\n  private headerRef = createRef<DayHeader>()\n  private tableRef = createRef<DayTable>()\n\n  render() {\n    let { options, dateProfileGenerator } = this.context\n    let { props } = this\n    let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator)\n\n    let headerContent = options.dayHeaders && (\n      <DayHeader\n        ref={this.headerRef}\n        dateProfile={props.dateProfile}\n        dates={dayTableModel.headerDates}\n        datesRepDistinctDays={dayTableModel.rowCnt === 1}\n      />\n    )\n\n    let bodyContent = (contentArg: ChunkContentCallbackArgs) => (\n      <DayTable\n        ref={this.tableRef}\n        dateProfile={props.dateProfile}\n        dayTableModel={dayTableModel}\n        businessHours={props.businessHours}\n        dateSelection={props.dateSelection}\n        eventStore={props.eventStore}\n        eventUiBases={props.eventUiBases}\n        eventSelection={props.eventSelection}\n        eventDrag={props.eventDrag}\n        eventResize={props.eventResize}\n        nextDayThreshold={options.nextDayThreshold}\n        colGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        dayMaxEvents={options.dayMaxEvents}\n        dayMaxEventRows={options.dayMaxEventRows}\n        showWeekNumbers={options.weekNumbers}\n        expandRows={!props.isHeightAuto}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n\n    return options.dayMinWidth\n      ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n      : this.renderSimpleLayout(headerContent, bodyContent)\n  }\n}\n\nexport function buildDayTableModel(dateProfile: DateProfile, dateProfileGenerator: DateProfileGenerator) {\n  let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator)\n\n  return new DayTableModel(\n    daySeries,\n    /year|month|week/.test(dateProfile.currentRangeUnit),\n  )\n}\n","import {\n  DateProfileGenerator,\n  addWeeks, diffWeeks,\n  DateRange,\n} from '@fullcalendar/common'\n\nexport class TableDateProfileGenerator extends DateProfileGenerator {\n  // Computes the date range that will be rendered.\n  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay): DateRange {\n    let { dateEnv } = this.props\n    let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay)\n    let start = renderRange.start\n    let end = renderRange.end\n    let endOfWeek\n\n    // year and month views should be aligned with weeks. this is already done for week\n    if (/^(year|month)$/.test(currentRangeUnit)) {\n      start = dateEnv.startOfWeek(start)\n\n      // make end-of-week if not already\n      endOfWeek = dateEnv.startOfWeek(end)\n      if (endOfWeek.valueOf() !== end.valueOf()) {\n        end = addWeeks(endOfWeek, 1)\n      }\n    }\n\n    // ensure 6 weeks\n    if (\n      this.props.monthMode &&\n      this.props.fixedWeekCount\n    ) {\n      let rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n        diffWeeks(start, end),\n      )\n      end = addWeeks(end, 6 - rowCnt)\n    }\n\n    return { start, end }\n  }\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport { DayTableView } from './DayTableView'\nimport { TableDateProfileGenerator } from './TableDateProfileGenerator'\nimport './main.css'\n\nexport { DayTable } from './DayTable'\nexport { DayTableSlicer } from './DayTableSlicer'\nexport { Table } from './Table'\nexport { TableSeg } from './TableSeg'\nexport { TableView } from './TableView'\nexport { buildDayTableModel } from './DayTableView'\nexport { DayTableView as DayGridView } // export as old name!\n\nexport default createPlugin({\n  initialView: 'dayGridMonth',\n  views: {\n\n    dayGrid: {\n      component: DayTableView,\n      dateProfileGeneratorClass: TableDateProfileGenerator,\n    },\n\n    dayGridDay: {\n      type: 'dayGrid',\n      duration: { days: 1 },\n    },\n\n    dayGridWeek: {\n      type: 'dayGrid',\n      duration: { weeks: 1 },\n    },\n\n    dayGridMonth: {\n      type: 'dayGrid',\n      duration: { months: 1 },\n      monthMode: true,\n      fixedWeekCount: true,\n    },\n\n  },\n})\n"]},"metadata":{},"sourceType":"module"}